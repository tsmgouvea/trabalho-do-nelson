from PyQt6 import  uic,QtWidgets
import mysql.connector # opção 1 de conexão com o banco
import pymysql # opção 2 de conexão com o banco - - CASO HAJA PROBLEMAS COM A OPÇÃO 1
#instalar a biblioteca - pip install reportlab
from reportlab.pdfgen import canvas
#opção 1
#banco = mysql.connector.connect(

# opção 2
banco = pymysql.connect( 
    host="localhost",
    user="root",
    passwd='senha123',
    database="cadastro_produtos"
)
#opção 1
#if banco.is_connect():
 #   print ("CONECTADO AO banco de dados com sucesso!")
  
  
  # Verificando se está conectado opção 2
try:
    banco.ping(reconnect=True)  # Tenta reconectar se necessário
    print("CONECTADO AO banco de dados com sucesso!")
except pymysql.MySQLError:
    print("Falha na conexão com o banco de dados.")

 
def excluir_dados():
    linha = segunda_tela.tableWidget.currentRow()# metodo que informa a linha que foi clicado 
    print(linha)# mostra a linha da tabela
    segunda_tela.tableWidget.removeRow(linha) # exclui item somente da tabela da interface
    # abrir e fechar o banco e comparar o indice da tabela com ID do banco

# exclusão no banco e atualização do id
    cursor = banco.cursor()
    cursor.execute("SELECT id FROM produtos") # selecionar somente o ID da tabela produtos
    dados_lidos = cursor.fetchall()
    print(dados_lidos)
# fazer a linha a ser excluida igual ao id do banco
    #valor_id = dados_lidos[linha][0]# atualiza 
    #cursor.execute("DELETE FROM produtos WHERE id="+ str(valor_id))


def gerar_pdf():
    cursor = banco.cursor()
    comando_SQL = "SELECT * FROM produtos"
    cursor.execute(comando_SQL)
    dados_lidos = cursor.fetchall()
    y = 0
    pdf = canvas.Canvas("cadastro_produtos.pdf")
    pdf.setFont("Times-Bold", 25)
    pdf.drawString(200,800, "Produtos cadastrados:")
    pdf.setFont("Times-Bold", 18)

    pdf.drawString(10,750, "ID")
    pdf.drawString(110,750, "CODIGO")
    pdf.drawString(210,750, "PRODUTO")
    pdf.drawString(310,750, "PREÇO")
    pdf.drawString(410,750, "CATEGORIA")

    for i in range(0, len(dados_lidos)):
        y = y + 50
        pdf.drawString(10,750 - y, str(dados_lidos[i][0]))
        pdf.drawString(110,750 - y, str(dados_lidos[i][1]))
        pdf.drawString(210,750 - y, str(dados_lidos[i][2]))
        pdf.drawString(310,750 - y, str(dados_lidos[i][3]))
        pdf.drawString(410,750 - y, str(dados_lidos[i][4]))

    pdf.save()
    print("PDF FOI GERADO COM SUCESSO!")

def funcao_principal():
    linha1 = formulario.lineEdit.text()
    linha2 = formulario.lineEdit_2.text()
    linha3 = formulario.lineEdit_3.text()

    categoria = ""
    
    if formulario.radioButton.isChecked() :
        print("Categoria Eletronicos selecionada")
        categoria ="Informatica"
        
    elif formulario.radioButton_2.isChecked() :
        print("Categoria Informatica selecionada")
        
        categoria ="Alimentos"
    else :
        print("Categoria Alimentos selecionada")
        categoria ="Eletronicos"

    print("Codigo:",linha1)
    print("Descricao:",linha2)
    print("Preco",linha3)

    cursor = banco.cursor()
    comando_SQL = "INSERT INTO produtos (codigo,descricao,preco,categoria) VALUES (%s,%s,%s,%s)"
    dados = (str(linha1),str(linha2),str(linha3),categoria)
    cursor.execute(comando_SQL,dados)
    banco.commit()
    formulario.lineEdit.setText("")
    formulario.lineEdit_2.setText("")
    formulario.lineEdit_3.setText("")

def chama_segunda_tela():
    segunda_tela.show()

    cursor = banco.cursor()
    comando_SQL = "SELECT * FROM produtos"
    cursor.execute(comando_SQL)
    dados_lidos = cursor.fetchall()

    segunda_tela.tableWidget.setRowCount(len(dados_lidos))
    segunda_tela.tableWidget.setColumnCount(5)

    for i in range(0, len(dados_lidos)):
        for j in range(0, 5):
           segunda_tela.tableWidget.setItem(i,j,QtWidgets.QTableWidgetItem(str(dados_lidos[i][j]))) 
   
app=QtWidgets.QApplication([])
formulario=uic.loadUi("formulario.ui")
segunda_tela=uic.loadUi("listar_dados_temp3.ui")
formulario.pushButton.clicked.connect(funcao_principal)
formulario.pushButton_2.clicked.connect(chama_segunda_tela)
segunda_tela.pushButton.clicked.connect(gerar_pdf)
segunda_tela.pushButton_2.clicked.connect(excluir_dados)

formulario.show()
app.exec()